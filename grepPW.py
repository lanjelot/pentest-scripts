#!/usr/bin/env python

from sys import argv
import re
import os

IGNORE=['cd', 'ls', 'rm', 'mkdir', 'vi', 'view', 'vim', 
  'tar', 'gunzip', 'ps', 'cp', 'mv', 'head', 'tail', 'less', 'more', 'ln', '/bin/rm',
  'find', 'diff', 'cat', 'gzcat',
  'grep']

def color(s, color):
    colors = {
        'red': '\033[91m',
        'blue': '\033[94m',
        'green': '\033[92m',
        'end': '\033[0m',
        }
    return '%s%s%s' % (colors[color], s, colors['end'])

def green(s):
    return color(s, 'green')

def red(s):
    return color(s, 'red')

def blue(s):
    return color(s, 'blue')

def walk_tree(toppath):
  tp = os.path.normpath(toppath)
  for root, dirnames, filenames in os.walk(tp):
    for fn in filenames:
      fp = os.path.join(root, fn)
      yield fp
    for dn in dirnames:
      walk_tree(dn)

def search_file(filepath):
    for l in open(filepath):
        l = l.strip()

        parts = re.split('\s', l)    
        if not parts:
            continue

        #if parts[0] in IGNORE:
        #  continue

        for w in parts:

            if re.subn('[^\x20-\x7F]', '', w)[1] > 0:
                continue
    
            if not (len(w) >= 8 and len(w) <= 12):
            #if not (len(w) == 10):
                continue
      
            if not re.search('[a-z]', w):
                continue
    
            if not re.match('[a-zA-Z0-9]', w):
                continue
          
            if not (re.search('[a-zA-Z]', w) and re.search('[0-9]', w)): #and re.search('[^a-zA-Z0-9]', w)):
                continue

            #if re.search('[^a-zA-Z0-9]', w):
            #    continue
    
            i = l.find(w)
            if re.search('[^\x20-\x7F]', l):
                l = '%r' % l
            #if re.search('[^\x20-\x7F]', w):
            #    w = '%r' % w
            ctx = '...' + l[i-200:i] + red(w) + l[i+len(w):i+100] + '...'

            if w not in candidates:
                candidates[w] = 0
                lines[w] = []
                files[w] = []

            candidates[w] += 1
            if ctx not in lines[w]:
                lines[w].append(ctx)
                files[w].append(filepath)

def display_results():
    for w, c in candidates.iteritems():
        if c > 10:
            continue

        for i, (l, f) in enumerate(zip(lines[w], files[w])):
            print '%s -> %s' % (f, l)
        print

SKIP_EXTENSIONS = ['pdf', 'docx', 'zip']
#ONLY_EXTENSIONS = ['log', 'xml', 'adm', 'ini' ,'txt', 'cmd', 'bat', 'vbs', 'csv']
ONLY_EXTENSIONS = ['msg', 'eml', 'log', 'xml', 'adm', 'ini' ,'txt', 'cmd', 'bat', 'vbs', 'csv']

if __name__ == '__main__':
    candidates = {}
    lines = {}
    files = {}

    if len(argv) == 1:
      search_file(stdin)
    else:
      for arg in argv[1:]:
        if os.path.isdir(arg):
          for f in walk_tree(arg):
            if os.path.isfile(f):
              ext = os.path.splitext(f)[1][1:].lower()
              if ext in SKIP_EXTENSIONS:
                continue
              if ext not in ONLY_EXTENSIONS:
                continue
              search_file(f)

        elif os.path.isfile(arg):
          search_file(arg)
    display_results()
